// creates a single node that points to itself
let makeList = func().
	let node = new { next = new {} , element = new {} } in
		(!node).next := node ;
		node
	end
	
let append = func(e, node).
	let n = new { next = new (!node).next , element = new {} } in
		(!node).next := n ;
		n
	end

let init = func( list ).
	list.head.element := 1;
	init( list.head , list.head.next );
	end

let init = func( head , node ).
	case node of
		[] ->
		_ ->
			if( head != node )
				node.element := 1;
				init( head , node.next )
			end
	end

// client code
/*
	TODO: append lots of node, then init
	TODO: iterate over all nodes summing its values
	TODO: show remove some node
	TODO: show remove of head node
*/