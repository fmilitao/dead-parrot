TODO:

-- vars with types in name?

FIXME:
--- how to auto pack with QUICK_OPEN?
loc l,t,e;
	l:e
	...

--- rething type assist panel
--- colision of names on delta and gamma?
	** needs to be merged

BUG:
	may be able to access hidden cap with diff name on open
	open<tx,y> ... may be able to access tx if in upper env?

IDIOMS:
-- on last element, try to pack:
	< nloc , e :: all outstanding capabilities >
-- currying for multi-argument functions

....

-- on cursor move, no need to send ast
-- on key press, send parsed ast
-- use webworkers to compute result + typecheck
-- how to abort if webworker does not terminate? have a stop flag on run?
run(...)
if( stop )
	return "aborted";

=======

-- how to throw exceptions from parse so that they look like JISON and check that records have no duplicated field names
-- Currying for multiple arguments (just syntax sugar, nothing too complex...)

-- location variables cannot be hidden, or renaming
- try to stack all "touched" capabilities at the end of a method.

- Typing algorithm:
	- name collisions should not be allowed, no crap about hidding.
(if the variable is hidden it may cause leaks)... renaming is
always possible anyway.

- check that OPEN does not produce a resulting environment/type that
depends on scoped types.

Types:
	- location variables
	- capability
	- reference
	- pure type
	- function type
	- forall type
	- exists type
	- none type??
	- record type
	- identifier/type var.
	- primitive type
	
========================================

>> define when parentesis are needed in toHTML for types?

+ use finally for exceptions?

- define standard Lib:
	+ - / *
	> < == !=
	&& || !

>> prepare for typedefs?

- define parsing priorities...
 fun( x ) . e := 2
	+ priorities, functions and sequence without ( x := 1 )

- code style:
	- CONSTANTS ARE CAPPED
	- console.debug for debug messages
	- console.error for error messages, it prints stack trace!
	- https://developers.google.com/chrome-developer-tools/docs/console
